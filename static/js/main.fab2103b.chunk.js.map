{"version":3,"sources":["components/Timer.js","components/FeatureCards.js","components/Header.js","components/CustomCards.js","components/AddCardForm.js","components/App.js","index.js","sound/Alarm_Clock.mp3"],"names":["Timer","state","isRunning","hours","minutes","seconds","totalMinutes","totalSecondsCounter","timeRemaining","totalSeconds","sound","Audio","soundfile","status","handleTimer","_this","setState","tick","props","totalTime","totalHours","Number","play","alert","pause","_this2","this","interval","setInterval","clearInterval","react_default","a","createElement","style","display","flexDirection","maxWidth","alignContent","flexWrap","time","onClick","color","backgroundColor","maxHeight","Component","FeatureCards","className","id","title","desc","toString","taskStatus","components_Timer","Header","greetings","Date","getHours","console","log","totalTask","CustomCards","removeCards","AddCardForm","handleValueChange","e","Object","defineProperty","target","name","value","handleSubmit","preventDefault","addCards","onSubmit","type","onChange","placeholder","min","App","cards","customCards","prevCardId","handleScoreChange","index","delta","prevState","score","players","handleAddCard","concat","toConsumableArray","handleRemoveCard","filter","c","components_Header","date","getDate","year","getFullYear","length","map","card","components_FeatureCards","key","components_CustomCards","components_AddCardForm","ReactDOM","render","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fab2103b.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport soundfile from '../sound/Alarm_Clock.mp3'\r\n\r\nclass Timer extends Component {\r\n    \r\n    state = {\r\n        isRunning: false, \r\n        hours: '',\r\n        minutes: '',\r\n        seconds: 0,\r\n        totalMinutes: 0,\r\n        totalSecondsCounter: 0,\r\n        timeRemaining: 0,\r\n        totalSeconds: 0,\r\n        sound: new Audio(soundfile),\r\n        status: 'In Progress',\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n      }\r\n\r\n    handleTimer = () => {\r\n        this.setState({\r\n            isRunning: !this.state.isRunning\r\n        \r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    tick = () => {\r\n        if (this.state.isRunning){\r\n            this.setState(state => ({\r\n                seconds: state.seconds + 1,\r\n                totalSecondsCounter: state.totalSecondsCounter + 1,\r\n                totalSeconds: this.props.totalTime * 60,\r\n                timeRemaining: 100 / this.state.totalSeconds,\r\n              }));\r\n        }\r\n\r\n      if (this.state.seconds === 60) {\r\n          this.setState(state => ({\r\n            minutes: state.minutes += 1,\r\n            totalMinutes: state.totalMinutes + 1,\r\n            seconds: state.seconds = 0\r\n          }));\r\n        }  \r\n        \r\n      if (this.state.minutes === 60) {\r\n\r\n        this.setState(state => ({\r\n            hours: state.hours += 1,\r\n            totalHours: state.totalHours + 1,\r\n            minutes: state.minutes = 0\r\n            \r\n          }));\r\n      }\r\n\r\n      if (Number(this.props.totalTime) === this.state.totalMinutes) {\r\n       \r\n         \r\n\r\n        this.state.sound.play()\r\n\r\n        this.setState(state => ({\r\n          totalMinutes: 0,\r\n          isRunning: false,\r\n          status:'Task Complete'\r\n        }));\r\n\r\n        alert('This task is done');\r\n\r\n        this.state.sound.pause()\r\n\r\n\r\n        \r\n     }\r\n\r\n\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n\r\n      \r\n    }\r\n\r\n    render() {\r\n\r\n      return (\r\n        \r\n        <div \r\n        style = {{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          maxWidth: '100%',\r\n          alignContent: 'stretch',\r\n          flexWrap: 'wrap',\r\n          }}\r\n        \r\n        >\r\n            \r\n            <h1>{this.props.time}</h1>\r\n          <button onClick={this.handleTimer}>{this.state.isRunning? 'Stop Task': 'Start Task'}</button>\r\n          <h4>Total Time Remaining: {this.props.totalTime - this.state.totalMinutes} Min</h4>\r\n          \r\n          <span>\r\n          <h3>{this.state.status}</h3>\r\n            <h4>{this.state.hours} hrs\r\n            <span> </span>\r\n            {this.state.minutes} min\r\n            <span > </span>\r\n            {this.state.seconds} sec</h4>\r\n          </span>\r\n          <span style = {{\r\n            color: 'green',\r\n            backgroundColor: 'green',\r\n            maxHeight: '5px',\r\n            // width: this.props.totalTime + 'vw',\r\n            // borderLeft:  this.state.seconds  + 'px solid red',\r\n            maxWidth: 100 - this.state.timeRemaining * this.state.totalSecondsCounter  + '%',\r\n            }}>.</span>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default Timer","import React from 'react';\r\nimport Timer from './Timer.js'\r\n\r\nconst FeatureCards = (props) => {\r\n \r\n        let totalTime = props.time;    \r\n    \r\n        return (\r\n            <div className = \"card\">\r\n               <span id=\"cardInfo\">\r\n                <h2>{props.title}</h2> \r\n                <p>{props.desc}</p>\r\n                <p>{props.time.toString()} min</p>\r\n                <h3>{props.taskStatus}</h3>\r\n                </span>\r\n\r\n                \r\n                <Timer\r\n                    totalTime = {totalTime}\r\n                />\r\n            </div>\r\n        )  \r\n};\r\n\r\nexport default FeatureCards","import React from 'react';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n  let greetings = \"\"\r\n  \r\n  let date = new Date();\r\n  let hours = date.getHours()\r\n\r\n    if (hours < 12)\r\n        greetings = \"Good Morning\"\r\n    else if (hours > 11 && hours < 18)\r\n        greetings = \"Good Afternoon\"\r\n    else \r\n        greetings = \"Good Evening\"\r\n      \r\n  console.log(hours)\r\n    return (\r\n      <header>\r\n        <div id=\"headerItem\">\r\n        <h2>{ props.title }</h2>\r\n        <span><p>Number of focus cards: {props.totalTask}</p></span>\r\n        </div>\r\n        <div id=\"headerGreeting\">\r\n        <span>\r\n          <h3>{greetings}</h3>\r\n        </span>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n\r\nexport default Header","import React from 'react'\r\nimport Timer from './Timer.js'\r\n\r\nconst CustomCards = (props) =>{\r\n\r\n    let totalTime = props.time;\r\n\r\n    return(\r\n        \r\n        <div className = \"card\">\r\n                <div>\r\n                    <button className=\"remove-card\" onClick={() => props.removeCards(props.id)}>✖ Remove</button>\r\n                    <span>\r\n                        <h2>{props.title}</h2> \r\n                        <p>{props.time} minutes</p>\r\n                    </span>\r\n                </div>\r\n                <Timer\r\n                    totalTime = {totalTime}\r\n                />\r\n        </div>\r\n\r\n        \r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CustomCards","import React, {Component} from 'react'\r\n\r\nclass AddCardForm extends Component {\r\n\r\n        state = {\r\n            title: '',\r\n            time:''\r\n        \r\n        }\r\n\r\n        handleValueChange = (e) => {\r\n            this.setState({ \r\n                [e.target.name]: e.target.value \r\n            }); \r\n        }\r\n\r\n        \r\n        handleSubmit = (e) => {\r\n          e.preventDefault();\r\n          if (this.state.title === '' || this.state.time === ''){\r\n          alert('Please enter something')\r\n          } else {\r\n\r\n         \r\n              this.props.addCards(this.state.title, this.state.time)\r\n          }\r\n        }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n    return(\r\n      <div id=\"addForm\">\r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input \r\n          type = 'text'\r\n          value = {this.state.title}\r\n          name = 'title'\r\n          onChange={this.handleValueChange}\r\n          placeholder = 'Enter task card title'\r\n        />\r\n        <input \r\n          type = 'number'\r\n          min = '1'\r\n          value ={this.state.time} \r\n          name = 'time'\r\n          onChange={this.handleValueChange}\r\n          placeholder = 'Enter focus minutes'\r\n        />\r\n        <input \r\n          type = 'submit'\r\n          value = 'Add Card'\r\n        />\r\n      </form>\r\n\r\n      \r\n          \r\n      </div>\r\n    );\r\n    }\r\n  }\r\n\r\nexport default AddCardForm","import React, {Component} from 'react';\nimport FeatureCards from './FeatureCards.js'\nimport Header from './Header.js'\nimport CustomCards from './CustomCards'\nimport AddCardForm from './AddCardForm'\n\nclass App extends Component {\n  state = {\n\n    cards: [\n      {\n        title: 'Get Your Run On',\n        desc: 'Run outside for 4 miles within 30 minutes',\n        time: 30,\n        status: '',\n        id:1\n      },\n      {\n        title: '100 Push Ups a Day',\n        desc: 'Perform 100 push ups a day',\n        time: 2,\n        status: '',\n        id:2\n      },\n      {\n        title: 'Things for your Brain',\n        desc: 'Read a book for an hour',\n        time: 30,\n        status: '',\n        id:3\n      }\n    ],\n\n    customCards: [\n      \n    ]\n  };\n // Custom Task Card Id\n  prevCardId = 0;\n\n  handleScoreChange = (index, delta) => {\n    this.setState( prevState => ({\n      score: prevState.players[index].score += delta\n    }));\n  }\n\n  // Add custom task cards\n  handleAddCard = ( title, time) => {\n      this.setState({\n        customCards: [\n          ...this.state.customCards,\n          {\n            title,\n            time,\n            id: this.prevCardId += 1\n          }\n        ]\n      });\n  }\n\n  //Remove custom task cards\n  handleRemoveCard = (id) => {\n    this.setState( prevState => {\n      return {\n        customCards: prevState.customCards.filter(c => c.id !== id)\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        \n        <Header \n          title=\"Focus Cards\" \n          date = {new Date().getDate()}\n          year = {new Date().getFullYear()}\n          totalTask={this.state.customCards.length + this.state.cards.length} \n        />\n        <div id=\"cardsSection\">\n        \n        <h1>Feature Focus Cards</h1>\n        {this.state.cards.map( card  =>\n            <FeatureCards \n            title={card.title}\n            desc={card.desc}\n            time ={card.time}\n            status ={card.status}\n            key={card.id}\n          />\n          \n        )}\n    \n        <h1>Add Focus Cards</h1>\n        <p>What do you want to focus on today</p>\n\n        {this.state.customCards.map (\n          customCards => \n          <CustomCards\n          title={customCards.title}\n          time={customCards.time}\n          id = {customCards.id}\n          key={customCards.id} \n          removeCards={this.handleRemoveCard}\n        />\n        )}\n\n        <AddCardForm\n        addCards={this.handleAddCard}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Alarm_Clock.b84fccdc.mp3\";"],"sourceRoot":""}